//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "word")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub language_id: i32,
    pub word_type: i8,
    pub spelling: String,
    pub number: i8,
    pub person: i8,
    pub gender: i8,
    pub verb_form: i8,
    pub verb_tense: i8,
    pub translations: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::language::Entity",
        from = "Column::LanguageId",
        to = "super::language::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Language,
}

impl Related<super::language::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Language.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
